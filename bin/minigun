#!/usr/bin/env node

var program = require('commander');
var version = require('../package.json').version;

var commands = require('../lib/commands');

program.version(version);
program
  .command('run <script>')
  .description('Run a test script. Example: `minigun run benchmark.json`')
  .option('-p, --payload <path>', 'Set payload file (CSV)')
  .option('-o, --output <path>', 'Set file to write stats to (will output ' +
          'to stdout by default)')
  .option('-k, --insecure', 'This  option explicitly allows Minigun to ' +
          'perform "insecure" TLS connections, for testing with' +
          'self-signed certificates')
  .option('-f, --profiler <number>', 'Use minigun-profiler to collect ' +
          ' cpu & memory usage of local node application')
  .action(commands.run);

program
  .command('quick <url>')
  .description('Run a quick test without writing a test script')
  .option('-d, --duration <seconds>', 'Duration of the test')
  .option('-r, --rate <number>', 'Arrivals per second')
  .option('-p, --payload <string>', 'Set POST payload')
  .option('-t, --content-type <string>',
    'Set content-type (defaults to application/json)')
  .option('-k, --insecure', 'This  option explicitly allows Minigun to ' +
          'perform "insecure" TLS connections, for testing with' +
          'self-signed certificates')
  .option('-f, --profiler <number>', 'Use minigun-profiler to collect ' +
          ' cpu & memory usage of local node application')
  .action(commands.quick);

program
  .command('report <file>')
  .description('Create a report from a JSON file created by "minigun run"')
  .action(commands.report);

program
  .command('dino')
  .description('Show dinosaur of the day')
  .action(commands.dino);

program.parse(process.argv);

if (!process.argv.slice(2).length) {
  program.help();
}
