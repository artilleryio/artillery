#!/usr/bin/env node

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

const command = require('@oclif/command');
const { createGlobalObject } = require('../lib/artillery-global');

const updateNotifier = require('update-notifier');
const pkg = require('../package.json');

const { rainbow } = require('../util');
const telemetry = require('../lib/telemetry');
const banner = require('../lib/cli/banner');

async function main() {
  await createGlobalObject();

  if (!process.argv.slice(2).length) {
    // print telemetry notification message
    if (telemetry.isEnabled()) {
      telemetry.notice();
    }

    console.log(Math.random() * 100 > 34 ?
                banner :
                rainbow(banner));
  } else if (process.argv.slice(2).length === 1 && process.argv.slice(2)[0] === '-V') {
    process.argv[2] = 'version';
  }

  try {
    const r = await command.run();
    await require('@oclif/command/flush')(r);
  } catch(err) {
    await require('@oclif/errors/handle')(err);

    console.log(err.stack);
    console.log(err.code);
    console.log(err.message);
  }
}

const notifier = updateNotifier({
  pkg,
  updateCheckInterval: 1000 * 60 * 60 * 24 * 14
});

if (notifier.update) {
  notifier.notify();
}

main();
