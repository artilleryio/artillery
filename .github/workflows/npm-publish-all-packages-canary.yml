name: Publish packages to NPM (canary)
on:
  push:
    branches:
      - main
    paths:
      - 'packages/artillery/**'
      - 'packages/artillery-engine-playwright/**'
      - 'packages/artillery-engine-posthog/**'
      - 'packages/artillery-plugin-apdex/**'
      - 'packages/artillery-plugin-ensure/**'
      - 'packages/artillery-plugin-expect/**'
      - 'packages/artillery-plugin-metrics-by-endpoint/**'
      - 'packages/artillery-plugin-publish-metrics/**'
      - 'packages/artillery-plugin-fake-data/**'   
      - 'packages/commons/**'
      - 'packages/core/**'
      - 'packages/skytrace/**'
      - 'packages/artillery-plugin-memory-inspector/**'
      
jobs:
  publish-fargate-worker-image:
    if: "!contains( github.event.head_commit.message, 'ci: release v')"
    uses: ./.github/workflows/docker-ecs-worker-image.yml
    permissions:
      contents: read
      id-token: write
    secrets:
      ECR_WORKER_IMAGE_PUSH_ROLE_ARN: ${{ secrets.ECR_WORKER_IMAGE_PUSH_ROLE_ARN }}

  build:
    runs-on: ubuntu-latest
    if: "!contains( github.event.head_commit.message, 'ci: release v')"
    needs: publish-fargate-worker-image
    permissions:
      contents: read
      packages: write
    env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'
          scope: '@artilleryio'
      - run: node .github/workflows/scripts/replace-worker-version-in-js-file.js
        env:
          COMMIT_SHA: ${{ github.sha }}
      - run: | 
          export COMMIT_SHA=$(git rev-parse --short HEAD)
          node .github/workflows/scripts/replace-package-versions.js
      # It must be published in this specific order to account for order of dependencies (e.g. artillery depends on commons, core, etc), in case failures happen in publishing.
      - run: npm -w @artilleryio/int-commons publish --tag canary
      - run: npm -w @artilleryio/int-core publish --tag canary
      - run: npm -w artillery-plugin-expect publish --tag canary
      - run: npm -w artillery-plugin-publish-metrics publish --tag canary
      - run: npm -w artillery-plugin-metrics-by-endpoint publish --tag canary
      - run: npm -w artillery-plugin-ensure publish --tag canary
      - run: npm -w artillery-plugin-apdex publish --tag canary
      - run: npm -w artillery-engine-posthog publish --tag canary
      - run: npm -w artillery-engine-playwright publish --tag canary
      - run: npm -w artillery-plugin-fake-data publish --tag canary
      - run: npm -w artillery publish --tag canary
      # Skytrace is a Typescript Package and needs to install -> build -> publish
      - run: npm install -w skytrace --ignore-scripts
      - run: npm run build -w skytrace
      - run: npm -w skytrace publish --tag canary
      - run: npm -w artillery-plugin-memory-inspector publish --tag canary