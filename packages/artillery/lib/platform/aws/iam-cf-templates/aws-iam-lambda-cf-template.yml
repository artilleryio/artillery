AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to create an IAM Role for Artillery.io Lambda with attached policies

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Restrict to GitHub Repository (OIDC)"
        Parameters:
          - GitHubRepository
          - GitHubBranch
      - Label:
          default: "Restrict to User or Role"
        Parameters:
          - User
          - Role
    ParameterLabels:
      GitHubRepository:
        default: "GitHub Repository (orgname/reponame)"
      GitHubBranch:
        default: "GitHub Branch"
      User:
        default: "User"
      Role:
        default: "Role"

Parameters:
  GitHubRepository:
    Type: String
    Default: ""
    Description: (Optional - required if using OIDC) Use when you want to restrict a specific GitHub repository (orgname/reponame) to assume this IAM role using OIDC (e.g. "artilleryio/artillery").

  GitHubBranch:
    Type: String
    Default: "*"
    Description: (Optional) Use when you also want to restrict a branch within a specific Github repository to assume this IAM role using OIDC (e.g. "main"). If not set, defaults to "*" (all branches). 

  User:
    Type: String
    Default: ""
    Description: (Optional) Use when you want to restrict the created role to be assumed only by a specific IAM user. Provide the user name or ARN.

  Role:
    Type: String
    Default: ""
    Description: (Optional) Use when you want to restrict the created role to be assumed only by a specific IAM role. Provide the role name or ARN.

Conditions:
  IsGHRepoSet:
    !Not [!Equals [!Ref GitHubRepository, ""]]
  IsUserSet:
    !And 
      - !Not [!Equals [!Ref User, ""]]
      - !Equals [!Ref GitHubRepository, ""]
  IsUserArn:
      !Equals [!Select [0, !Split [":", !Ref User]], "arn"]
  IsRoleSet:
    !And 
      - !Not [!Equals [!Ref Role, ""]]
      - !Equals [!Ref GitHubRepository, ""]
      - !Equals [!Ref User, ""]
  IsRoleArn:
      !Equals [!Select [0, !Split [":", !Ref Role]], "arn"]


Resources:
  ArtilleryDistributedTestingLambdaRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "ArtilleryDistributedTestingLambdaRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Federated: !If [IsGHRepoSet,!Sub  "arn:aws:iam::${AWS::AccountId}:oidc-provider/token.actions.githubusercontent.com", !Ref "AWS::NoValue"]
              AWS: !If [IsGHRepoSet, !Ref "AWS::NoValue", 
                      !If [IsUserSet, !If [IsUserArn, !Ref User, !Sub "arn:aws:iam::${AWS::AccountId}:user/${User}"],
                          !If [IsRoleSet, !If [IsRoleArn, !Ref Role, !Sub "arn:aws:iam::${AWS::AccountId}:role/${Role}"],
                              !Sub "arn:aws:iam::${AWS::AccountId}:root"]]]
            Action: !If [IsGHRepoSet, "sts:AssumeRoleWithWebIdentity", "sts:AssumeRole"]
            Condition:
              !If [IsGHRepoSet, 
                  {
                    StringEquals:
                      {
                        "token.actions.githubusercontent.com:aud": "sts.amazonaws.com"
                      },
                    StringLike:
                      {
                        "token.actions.githubusercontent.com:sub": !Ref "repo:${GitHubRepository}:${GitHubBranch}"
                      }
                  }, !Ref "AWS::NoValue"]
      Path: "/"
      Policies:
        - PolicyName: ArtilleryDistributedTestingLambdaPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: CreateOrGetLambdaRole
                Effect: Allow
                Action:
                  - iam:CreateRole
                  - iam:GetRole
                  - iam:PassRole
                  - iam:AttachRolePolicy
                Resource: !Sub "arn:aws:iam::${AWS::AccountId}:role/artilleryio-default-lambda-role-*"
              - Sid: CreateLambdaPolicy
                Effect: Allow
                Action:
                  - iam:CreatePolicy
                Resource: !Sub "arn:aws:iam::${AWS::AccountId}:policy/artilleryio-lambda-policy-*"
              - Sid: SQSPermissions
                Effect: Allow
                Action:
                  - sqs:*
                Resource: !Sub "arn:aws:sqs:*:${AWS::AccountId}:artilleryio*"
              - Sid: SQSListQueues
                Effect: Allow
                Action:
                  - sqs:ListQueues
                Resource: "*"
              - Sid: LambdaPermissions
                Effect: Allow
                Action:
                  - lambda:InvokeFunction
                  - lambda:CreateFunction
                  - lambda:DeleteFunction
                  - lambda:GetFunctionConfiguration
                Resource: !Sub "arn:aws:lambda:*:${AWS::AccountId}:function:artilleryio-*"
              - Sid: EcrPullImagePermissions
                Effect: Allow
                Action:
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                Resource: "arn:aws:ecr:*:248481025674:repository/artillery-worker"
              - Sid: S3Permissions
                Effect: Allow
                Action:
                  - s3:CreateBucket
                  - s3:DeleteObject
                  - s3:GetObject
                  - s3:PutObject
                  - s3:ListBucket
                  - s3:GetLifecycleConfiguration
                  - s3:PutLifecycleConfiguration
                Resource:
                  - !Sub "arn:aws:s3:::artilleryio-test-data-*"
                  - !Sub "arn:aws:s3:::artilleryio-test-data-*/*"
Outputs:
  RoleArn:
    Description: ARN of the IAM Role for Artillery.io Lambda functions
    Value: !GetAtt ArtilleryDistributedTestingLambdaRole.Arn
